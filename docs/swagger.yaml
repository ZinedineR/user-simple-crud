basePath: /
definitions:
  user-simple-crud_internal_delivery_http_response.DataResponse:
    properties:
      data: {}
      responseCode:
        type: integer
      responseMessage: {}
    type: object
  user-simple-crud_internal_delivery_http_response.PaginationResponse:
    properties:
      data: {}
      pagination: {}
      responseCode:
        type: integer
      responseMessage: {}
    type: object
  user-simple-crud_internal_delivery_http_response.SuccessResponse:
    properties:
      responseCode:
        type: integer
      responseMessage: {}
    type: object
  user-simple-crud_internal_entity.User:
    properties:
      email:
        example: john_doe@example.com
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      password:
        description: Example of bcrypt-hashed password
        example: $2a$12$eixZaYVK1fsbw1ZfbX3OXe.PZyWJQ0Zf10hErsTQ6FVRHiA2vwLHu
        type: string
      username:
        example: john_doe
        type: string
    type: object
  user-simple-crud_internal_entity.UserLogin:
    properties:
      email:
        example: john_doe@example.com
        type: string
      password:
        description: '"password" custom validation assumed'
        example: SecurePass123!
        minLength: 8
        type: string
      username:
        example: john_doe
        type: string
    required:
    - password
    type: object
  user-simple-crud_internal_model.Pagination:
    properties:
      limit:
        description: The size of the page
        example: 10
        type: integer
      page:
        description: The current page
        example: 1
        type: integer
      total_pages:
        description: The total number of pages
        example: 5
        type: integer
      total_row_per_page:
        description: The total number of data per page
        example: 10
        type: integer
      total_rows:
        description: The total number of data
        example: 50
        type: integer
    type: object
  user-simple-crud_internal_services.UserLoginResponse:
    properties:
      email:
        example: john_doe@example.com
        type: string
      token:
        description: JWT token example
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
      username:
        example: john_doe
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:9004
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: user-simple-crud
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates the user and returns an access token
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user-simple-crud_internal_services.UserLoginResponse'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      summary: User login
      tags:
      - Users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided username and password
      parameters:
      - description: Registration Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      summary: Register a new user
      tags:
      - Users
  /users:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of users with optional ordering and
        filtering
      parameters:
      - description: 'format: Bearer <JWT TOKEN>'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Number of items per page
        in: query
        name: pageSize
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      - description: Filter rules<br><br>### Rules Filter<br>rule:<br>  * {Name of
          Field}:{value}:{Symbol}<br><br>Symbols:<br>  * eq (=)<br>  * lt (<)<br>  *
          gt (>)<br>  * lte (<=)<br>  * gte (>=)<br>  * in (in)<br>  * like (like)<br><br>Field
          list:<br>  * id<br>  * username<br>  * email
        in: query
        name: filter
        type: string
      - description: Sort rules:<br><br>### Rules Sort<br>rule:<br>  * {Name of Field}:{Symbol}<br><br>Symbols:<br>  *
          asc<br>  * desc<br><br>Field list:<br>  * id<br>  * title<br>  * isbn<br>  *
          author_id
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.PaginationResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/user-simple-crud_internal_entity.User'
                  type: array
                pagination:
                  $ref: '#/definitions/user-simple-crud_internal_model.Pagination'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a new book with the provided details
      parameters:
      - description: 'format: Bearer <JWT TOKEN>'
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Request
        in: body
        name: notification-list
        required: true
        schema:
          $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new book
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing book by ID
      parameters:
      - description: 'format: Bearer <JWT TOKEN>'
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID (UUID format)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.SuccessResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.SuccessResponse'
      summary: Delete an existing book
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Retrieves the details of a specific book by ID
      parameters:
      - description: 'format: Bearer <JWT TOKEN>'
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID (UUID format)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user-simple-crud_internal_entity.User'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      summary: Get details of a book
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Updates an existing book with the provided details
      parameters:
      - description: 'format: Bearer <JWT TOKEN>'
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID (UUID format)
        in: path
        name: id
        required: true
        type: string
      - description: Updated User details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user-simple-crud_internal_entity.UserLogin'
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/user-simple-crud_internal_delivery_http_response.DataResponse'
      summary: Update an existing book
      tags:
      - Users
swagger: "2.0"
