// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	httpclient "user-simple-crud/pkg/httpclient"

	mock "github.com/stretchr/testify/mock"
)

// ClientFactory is an autogenerated mock type for the ClientFactory type
type ClientFactory struct {
	mock.Mock
}

// CreateClient provides a mock function with given fields:
func (_m *ClientFactory) CreateClient() httpclient.Client {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CreateClient")
	}

	var r0 httpclient.Client
	if rf, ok := ret.Get(0).(func() httpclient.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(httpclient.Client)
		}
	}

	return r0
}

// NewClientFactory creates a new instance of ClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *ClientFactory {
	mock := &ClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
